name: hummingbot-core

services:

  db:
    image: ${DB_IMAGE}
    container_name: hbot-db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - hbot-db-data:/var/lib/postgresql/data/pgdata
    networks:
      - hbotnet
    profiles: ['db']

  gateway:
    container_name: hbot-gateway
    image: ${GW_IMAGE}
    restart: always
    ports:
      - ${GW_DOCS_PORT:-8080}:8080
      - ${GW_PORT:-15888}:15888
    volumes:
      - "./gateway_files/conf:/home/gateway/conf"
      - "./gateway_files/logs:/home/gateway/logs"
      - "./gateway_files/db:/home/gateway/db"
      - "./certs:/home/gateway/certs"
    environment:
      - GATEWAY_PASSPHRASE=${GW_PASSPHRASE}
    networks:
      hbotnet:
        aliases:
        - gateway.local
    profiles: ['gateway', 'all']

  emqx1:
    image: ${MQTT_EMQX_IMAGE}
    restart: unless-stopped
    container_name: hbot-emqx-1
    environment:
      - EMQX_NAME=emqx
      - EMQX_HOST=node1.emqx.local
      - EMQX_CLUSTER__DISCOVERY_STRATEGY=static
      - EMQX_CLUSTER__STATIC__SEEDS=[emqx@node1.emqx.local]
      - EMQX_LOADED_PLUGINS="emqx_recon,emqx_retainer,emqx_management,emqx_dashboard"
    volumes:
      - hbot-emqx-data:/opt/emqx/data
      - hbot-emqx-log:/opt/emqx/log
      - hbot-emqx-etc:/opt/emqx/etc
    ports:
      - "1883:1883"  # mqtt:tcp
      - "8883:8883"  # mqtt:tcp:ssl
      - "8083:8083"  # mqtt:ws
      - "8084:8084"  # mqtt:ws:ssl
      - "8081:8081"  # http:management
      - "18083:18083"  # http:dashboard
      - "61613:61613"  # web-stomp gateway
    networks:
      hbotnet:
        aliases:
        - node1.emqx.local
    healthcheck:
      test: ["CMD", "/opt/emqx/bin/emqx_ctl", "status"]
      interval: 5s
      timeout: 25s
      retries: 10
    profiles: ['mqtt', 'all']

  tradingview-mqtt-bridge:
    image: ${TV_BRIDGE_IMAGE:-klpanagi/tradingview-mqtt-bridge:latest}
    container_name: tradingview-mqtt-bridge
    restart: unless-stopped
    depends_on:
      emqx1:
        condition: service_healthy
        restart: true
    ports:
      - '8082:8080'
    environment:
      - SEC_KEY=${TV_BRIDGE_SEC_KEY}
      - MQTT_HOST=node1.emqx.local
      - MQTT_PORT=1883
      - MQTT_USERNAME=
      - MQTT_PASSWORD=
      - MQTT_TOPIC=${TV_BRIDGE_MQTT_TOPIC}
    command: [
      "uvicorn",
      "app:app",
      "--workers", "${TV_BRIDGE_WORKERS}",
      "--host", "0.0.0.0",
      "--port", "8080",
      '--root-path', '']
    networks:
      hbotnet:
        aliases:
        - tv-mqtt-bridge.local
    profiles: ['tradingview']

  dashboard:
    image: hummingbot/dashboard:latest
    container_name: hbot-dashboard
    restart: unless-stopped
    networks:
      hbotnet:
        aliases:
        - dashboard.local
    volumes:
      - ./hummingbot_files/data:/home/dashboard/data
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 8501:8501
    profiles: ['dashboard']

volumes:
  hbot-gateway-certs:
    name: hbot-gateway-certs
    driver: local
    driver_opts: {}
  hbot-gateway-conf:
    name: hbot-gateway-conf
    driver: local
    driver_opts: {}
  hbot-gateway-logs:
    name: hbot-gateway-logs
    driver: local
    driver_opts: {}
  hbot-gateway-db:
    name: hbot-gateway-db
    driver: local
    driver_opts: {}

  hbot-db-data:
    name: hbot-db-data
    driver: local
    driver_opts: {}

  hbot-emqx-data:
    name: hbot-emqx-data
    driver: local
    driver_opts: {}
  hbot-emqx-log:
    name: hbot-emqx-log
    driver: local
    driver_opts: {}
  hbot-emqx-etc:
    name: hbot-emqx-etc
    driver: local
    driver_opts: {}

networks:
  hbotnet:
    name: hbotnet
    driver: bridge
